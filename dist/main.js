/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n    margin: 0;\\n    border: 0;\\n    padding: 0;\\n    background-color: #e2e8f0;\\n}\\n\\n.hidden {\\n    display: none !important;\\n}\\n\\n.occupied {\\n    border: 1px solid rgb(0, 47, 255);\\n    background-color: #94a3b8;\\n}\\n\\n.header {\\n    height: 80px;\\n    width: 100vw;\\n    background-color: #94a3b8;\\n}\\n\\n.header h1 {\\n    margin-top: 0;\\n    padding-left: 10px;\\n}\\n\\n.header p {\\n    margin-left: 10px\\n}\\n\\n.newGameBtn {\\n    cursor: pointer;\\n    border: none;\\n    font-size: 2em;\\n    width: 215px;\\n    height: 100px;\\n}\\n\\n.restartGameBtn {\\n    cursor: pointer;\\n    height: 125px;\\n    font-size: 1.2em;\\n}\\n\\n.resetBtn {\\n    cursor: pointer;\\n    margin: 25px;\\n    height: 150px;\\n    width: 150px;\\n    font-size: 1.2em;\\n}\\n\\n.confirmBtn {\\n    cursor: pointer;\\n    margin: 25px;\\n    height: 150px;\\n    width: 150px;\\n    font-size: 1.2em;\\n}\\n\\n.continueBtn {\\n    cursor: pointer;\\n    margin-top: 10px;\\n    width: 200px;\\n    height: 70px;\\n    font-size: 1.2em;\\n}\\n\\n.startGameBtn {\\n    cursor: pointer;\\n    margin-top: 10px;\\n    width: 300px;\\n    height: 100px;\\n    font-size: 1.2em;\\n}\\n\\n.p1TurnFinBtn {\\n    height: 100px;\\n    width: 170px;\\n    font-size: 1.2em;\\n}\\n\\n.p2TurnFinBtn {\\n    height: 100px;\\n    width: 170px;\\n    font-size: 1.2em;\\n}\\n\\n.nextDialogContainer {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 20px;\\n    font-size: 1.2em;\\n}\\n\\n.startDialogContainer {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 20px;\\n    font-size: 1.2em;\\n}\\n\\n.gameOverDialog {\\n    height: 200px;\\n    width: 200px;\\n    font-size: 1.3em;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 30px;\\n}\\n\\n::backdrop {\\n    background-color: #cbd5e1;\\n}\\n\\n.newGameBtn:hover {\\n    background-color: #e2e8f0;\\n}\\n\\n.newGameBtn:active {\\n    background-color: #cbd5e1;\\n}\\n\\n.mainContentContainer {\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n.gameboardContainer {\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: space-evenly;\\n    margin: 10px;\\n}\\n\\n.playerHeader {\\n    margin: 5px;\\n}\\n\\n.gridContainer {\\n    display: flex;\\n    flex-wrap: wrap;\\n    margin: 10px;\\n    height: 400px;\\n    width: 400px;\\n    border: 2px solid rgb(120, 120, 120);\\n}\\n\\n.gameboardOne {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n}\\n\\n.gameboardOneSquare {\\n    height: 38px;\\n    width: 38px;\\n    border: 1px solid rgb(175, 175, 175);\\n}\\n\\n.gameboardOneSquare.over {\\n    background-color: rgba(0, 128, 0, 0.664);\\n}\\n\\n.gameboardSquareAttack:hover {\\n    cursor: crosshair;\\n    background-color: rgb(255, 210, 210);\\n}\\n\\n.gameboardSquareAttack:active {\\n    background-color: rgb(255, 190, 190);\\n}\\n\\n.gameboardTwo {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n}\\n\\n.gameboardTwoSquare {\\n    height: 38px;\\n    width: 38px;\\n    border: 1px solid rgb(175, 175, 175);\\n}\\n\\n.gameboardTwoSquare.over {\\n    background-color: rgba(0, 128, 0, 0.664);\\n}\\n\\n/* .gameboardTwoSquare:hover {\\n    cursor: crosshair;\\n    background-color: rgb(255, 210, 210);\\n}\\n\\n.gameboardTwoSquare:active {\\n    background-color: rgb(255, 190, 190);\\n} */\\n\\n.shipContainer {\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    margin-bottom: 5px;\\n    width: 400px;\\n    height: auto;\\n    border: 2px solid rgb(120, 120, 120);\\n}\\n\\n.carrier {\\n    margin: 10px;\\n    cursor: move;\\n    width: 200px;\\n    height: 40px;\\n    background-color: rgb(200, 200, 200);\\n    border: 1px solid rgb(141, 141, 141);\\n}\\n\\n.rotateCarrier {\\n    width: 40px !important;\\n    height: 200px !important;\\n}\\n\\n.destroyer {\\n    margin: 10px;\\n    cursor: move;\\n    width: 160px;\\n    height: 40px;\\n    background-color: rgb(200, 200, 200);\\n    border: 1px solid rgb(141, 141, 141);\\n}\\n\\n.rotateDestroyer {\\n    width: 40px !important;\\n    height: 160px !important;\\n}\\n\\n.battleship1 {\\n    margin: 10px;\\n    cursor: move;\\n    width: 120px;\\n    height: 40px;\\n    background-color: rgb(200, 200, 200);\\n    border: 1px solid rgb(141, 141, 141);\\n}\\n\\n.rotateBattleship {\\n    width: 40px !important;\\n    height: 120px !important;\\n}\\n\\n.battleship2 {\\n    margin: 10px;\\n    cursor: move;\\n    width: 120px;\\n    height: 40px;\\n    background-color: rgb(200, 200, 200);\\n    border: 1px solid rgb(141, 141, 141);\\n}\\n\\n.lifeRaft {\\n    margin: 10px;\\n    cursor: move;\\n    width: 40px;\\n    height: 40px;\\n    background-color: rgb(200, 200, 200);\\n    border: 1px solid rgb(141, 141, 141);\\n}\", \"\"]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://Battleship/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://Battleship/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ (function(module) {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://Battleship/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://Battleship/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ (function(module) {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://Battleship/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ (function(module) {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://Battleship/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ (function(module) {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://Battleship/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://Battleship/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ (function(module) {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://Battleship/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ (function(module) {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://Battleship/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/boardFunctions.js":
/*!*******************************!*\
  !*** ./src/boardFunctions.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gameboardClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameboardClass */ \"./src/gameboardClass.js\");\n/* harmony import */ var _shipClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shipClass */ \"./src/shipClass.js\");\n/* harmony import */ var _domElemCreation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./domElemCreation */ \"./src/domElemCreation.js\");\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n\n\n\n\n\n\n// class Player {\n//     constructor(name){\n//         this.name = name;\n//         this.playerGameboard = new Gameboard();\n//         this.carrier = new Ship('carrier', 5);\n//         this.destroyer = new Ship('destroyer', 4);\n//         this.battleship = new Ship('battleship', 3);\n//         this.battleship2 = new Ship('battleship2', 3);\n//         this.lifeRaft = new Ship('lifeRaft', 1);\n//     }\n// }\n\n\n// class Gameboard {\n//     constructor(){\n//         this.board = new Array(100).fill(null);\n//         this.shipPositions = new Map(); // holds key-value pairs;\n//         //{ 'ship.name' => [ship coordinates] } layout for each ship added via placeShip()\n//         // can access .keys(); .values(); .size |no brackets after .size|\n//         this.ships = [];\n//     }\n\n//     placeShip(ship, shipStart, shipEnd){\n//         this.ships.push(ship);\n//         if(shipStart == null){\n//             return;\n//         }\n//         for(let i = 0; i < ship.length; i++){\n//             this.board.splice(shipStart, 1, ship);\n\n//             if(this.shipPositions.has(ship.name)){\n//                 this.shipPositions.get(ship.name).push(shipStart);\n//             } else {\n//                 this.shipPositions.set(ship.name, [shipStart]); // 'if the ship doesn't exist already, .set the ship.name && an array containing the ship coordinates to our shipPositions Map'\n//             }\n\n//             if(shipEnd > shipStart + 9){ //\"is ship vertical or horizontal?\"\n//                 shipStart += 10; // if vertical, we know the next spot in the array/grid it should be is 10 places away (in our 10x10 array/grid)\n//             } else {\n//                 shipStart++; // if horizontal, it's just the next space over\n//             }\n//         }\n//     };\n\n//     checkGameStatus(){\n//         if(this.ships.length === 0){\n//             return 'GAME OVER'\n//         } else {\n//             return 'it aint over yet';\n//         }\n//     }\n\n//     checkShipStatus(currentShip){\n//         if(currentShip.sunk === true){\n//             this.ships.forEach(ship => {\n//                 let shipIndex = this.ships.indexOf(currentShip)\n//                 if(ship.name == currentShip.name){\n//                     this.ships.splice(shipIndex, 1);\n//                     this.checkGameStatus();\n//                     // MIGHT ALSO HAVE TO REMOVE THE SHIP FROM this.shipPositions AFTER .splice()\n//                     // KEEP THIS AS AN FYI IN CASE WE NEED TO REMOVE THEM AS WELL\n//                 }\n//             })\n//         } else {\n//             return;\n//         }\n//     }\n\n//     receiveAttack(location){\n//         if(this.board[location] !== null){\n//             let shipAttacked = this.checkShipLocation(location);\n//             shipAttacked.hit();\n//             this.checkShipStatus(shipAttacked);\n//             return `hit`;\n//         } else {\n//             this.board[location] = 'miss';\n//             // we can write something later that if(this.board[location] == 'miss'){'gridSquare becomes the color blue'} type thing, to represent a 'missed' hit on the gameboard for the player to see where they're already tried and missed\n//             return `lol you missed`;\n//         }\n//     }\n\n//     checkShipLocation(location){\n//         for(let [key, value] of this.shipPositions.entries()) {\n//             if (value.includes(location)){\n//                 let shipAtLocation = this.ships.find((ship) => ship.name === key);\n//                 return shipAtLocation;\n//             }\n//         }\n//     }\n// }\n\n\n// class Ship {\n//     constructor(name, length, hits = 0, sunk = false){\n//         this.name = name;\n//         this.length = length;\n//         this.orientation = 0;\n//         this.hits = hits;\n//         this.sunk = sunk;\n//     }\n\n//     hit(){\n//         this.hits++;\n//         if(this.hits !== this.length){\n//             return 'hit';\n//         } else {\n//             this.sunk = true;\n//             return 'sunk';\n//         }\n//     }\n// }\n\n\n//\n//                               ______________\n//                              |              |\n//                              | Hey go away. |                               \n//                              | Don't touch  |\n//     || __   ||               |  what's up   |\n//     ||=\\_`\\=||               |    there     |\n//     || (__/ ||               |______________|\n//     ||  | | :-\"\"\"-.           \\\n//     ||==| \\/-=-.   \\          /\n//     ||  |(_|o o/   |_        /\n//     ||   \\/ \"  \\   ,_)      /\n//     ||====\\ ^  /__/ -------'\n//     ||     ;--'  `-.\n//     ||    /      .  \\\n//     ||===;        \\  \\\n//     ||   |         | |\n//     || .-\\ '     _/_/\n//     |:'  _;.    (_  \\\n//     /  .'  `;\\   \\\\_/\n//    |_ /     |||  |\\\\\n//   /  _)=====|||  | ||\n//  /  /|      ||/  / //\n//  \\_/||      ( `-/ ||\n//     ||======/  /  \\\\ .-.\n//     ||      \\_/    \\'-'/\n//     ||      ||      `\"`\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n//     ||      ||\n//     ||      ||\n//     ||======||\n\n\n(0,_domElemCreation__WEBPACK_IMPORTED_MODULE_2__.createBody)();\n\nfunction startGame(){\n\n    let p1gameboard = new _gameboardClass__WEBPACK_IMPORTED_MODULE_0__.Gameboard;\n    const p1Carrier = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('carrier', 5);\n    const p1Destroyer = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('destroyer', 4);\n    const p1Battleship1 = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('battleship1', 3); // changed from 'battleship'\n    const p1Battleship2 = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('battleship2', 3);\n    const p1LifeRaft = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('lifeRaft', 1);\n\n    let p2gameboard = new _gameboardClass__WEBPACK_IMPORTED_MODULE_0__.Gameboard;\n    const p2Carrier = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('carrier', 5);\n    const p2Destroyer = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('destroyer', 4);\n    const p2Battleship1 = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('battleship1', 3); // changed from 'battleship'\n    const p2Battleship2 = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('battleship2', 3);\n    const p2LifeRaft = new _shipClass__WEBPACK_IMPORTED_MODULE_1__.Ship('lifeRaft', 1);\n\n    let currentShip;\n    let currentGridSquare;\n    let currentGameboard;\n    let playerHasAttacked = 0;\n    let gameboardOneSquares = document.querySelectorAll('.gameboardOneSquare');\n    let gameboardTwoSquares = document.querySelectorAll('.gameboardTwoSquare');\n\n    const newGameBtn = document.querySelector('.newGameBtn');\n    newGameBtn.addEventListener('click', () => {\n        const mainContainerDiv = document.querySelector('.mainContentContainer');\n        mainContainerDiv.classList.remove('hidden');\n        newGameBtn.classList.add('hidden');\n    })\n\n    function dragStart() {\n        this.style.opacity = '0.4';\n    };\n\n    function dragOver(e) {\n        e.preventDefault();\n        this.classList.add('over');\n        return false;\n    };\n\n    function removeOver(e) {\n        this.classList.remove('over');\n    }\n\n    function dragLeave(e) {\n        this.classList.remove('over');\n    }\n\n    function confirmShipAndBoard(e) {\n        currentShip = e.target.classList[0]; // the ship name\n        if (e.target.classList[1] === 'p1'){ // 'p1'/'p2' -- the player that owns the ship\n            currentGameboard = p1gameboard;\n        } else {\n            currentGameboard = p2gameboard;\n        }\n    };\n\n    function getStartPosition(e) {\n        currentGridSquare = e.target.classList[1];\n    }\n\n    function placeShipOnBoard(ship, player, squareNum){\n        for(let i = 0; i < ship.length; i++){\n            let shipSquares = document.querySelector(`.${player}${squareNum}`);\n            shipSquares.classList.add('occupied');\n\n            if(ship.orientation === 0){\n                squareNum++;\n            } else {\n                squareNum = parseInt(squareNum) + 10;\n                squareNum = squareNum.toString();\n            }\n\n            if(currentGameboard.ships.length === 5){\n                addShipResetBtn(player);\n                addConfirmShipPlacementBtn(player);\n            }\n            \n        }\n    }\n\n    function changeShipOrientation(e) {\n        if(e.target.classList[1] === 'p1'){ \n            currentGameboard = p1gameboard;\n        } else if (e.target.classList[1] === 'p2'){\n            currentGameboard = p2gameboard;\n        }\n        let targetShip;\n        let rotation;\n        let ship = e.target.classList[0];\n        switch(ship) {\n            case 'carrier':\n                targetShip = currentGameboard == p1gameboard ? p1Carrier : p2Carrier;\n                rotation = 'rotateCarrier';\n                break;\n            case 'destroyer':\n                targetShip = currentGameboard == p1gameboard ? p1Destroyer : p2Destroyer;\n                rotation = 'rotateDestroyer'\n                break;\n            case 'battleship1':\n                targetShip = currentGameboard == p1gameboard ? p1Battleship1 : p2Battleship1;\n                rotation = 'rotateBattleship'\n                break;\n            case 'battleship2':\n                targetShip = currentGameboard == p1gameboard ? p1Battleship2 : p2Battleship2;\n                rotation = 'rotateBattleship'\n                break;\n            case 'lifeRaft':\n                targetShip = currentGameboard == p1gameboard ? p1LifeRaft : p2LifeRaft;\n                break;\n            default:\n                return 'invalid ship selection';\n        }\n        if(e.target.classList[1] === 'p1' || e.target.classList[1] === 'p2'){\n            \n            if(e.target.classList.contains(rotation)){\n                e.target.classList.remove(rotation);\n                targetShip.orientation = 0;\n                return;\n            }\n            e.target.classList.add(rotation);\n            targetShip.orientation = 1;\n        }\n    }\n\n    function checkLocation(gridSquare, ship) {\n        let square = parseInt(gridSquare);\n        let result = 0;\n        if(ship.orientation === 1){\n            for(let i = 0; i < ship.length; i++){\n                if(currentGameboard.board[square] !== null){\n                    result -= 1;\n                } else {\n                    square += 10;\n                    result += 1;\n                }\n            }\n        } else {\n            for(let i = 0; i < ship.length; i++){\n                if(currentGameboard.board[square] !== null){\n                    result -= 1;\n                } else {\n                    square++;\n                    result += 1;\n                }\n            }\n        }\n        return result;\n    }\n\n    function checkForEdge(gridSquare, ship) {\n        let start = parseInt(gridSquare);\n\n        if(ship.orientation === 1){\n            let rowNum = Math.floor(start / 10);\n            let maxRowNum = 10 - ship.length;\n            if(rowNum > maxRowNum){\n                return true;\n            }\n        } else {\n            let maxColNum = 10 - ship.length;\n            let colNum = start % 10;\n            if (colNum > maxColNum){\n                return true;\n            }\n        }\n    }\n\n    async function placeShipInArr(e) {\n        let currentShipInstance;\n        let gridSquare = currentGridSquare.slice(3);\n        await new Promise(resolve => {\n            const checkCurrentShip = () => {\n              if (currentShip && currentGameboard && currentGridSquare) {\n                resolve();\n              } else {\n                setTimeout(checkCurrentShip, 20); // re-check after 20ms\n              }\n            }\n            \n            checkCurrentShip();\n        });\n        switch(currentShip) {\n            case 'carrier':\n                currentShipInstance = currentGameboard == p1gameboard ? p1Carrier : p2Carrier;\n                break;\n            case 'destroyer':\n                currentShipInstance = currentGameboard == p1gameboard ? p1Destroyer : p2Destroyer;\n                break;\n            case 'battleship1':\n                currentShipInstance = currentGameboard == p1gameboard ? p1Battleship1 : p2Battleship1;\n                break;\n            case 'battleship2':\n                currentShipInstance = currentGameboard == p1gameboard ? p1Battleship2 : p2Battleship2;\n                break;\n            case 'lifeRaft':\n                currentShipInstance = currentGameboard == p1gameboard ? p1LifeRaft : p2LifeRaft;\n                break;\n            default:\n                return 'invalid ship selection';\n        }\n        if(checkForEdge(gridSquare, currentShipInstance)){\n            alert('error: ship will breach an edge');\n            return;\n        }\n        \n        if(checkLocation(gridSquare, currentShipInstance) === currentShipInstance.length){\n            let shipStart = parseInt(gridSquare); // number value of grid square\n            let shipEnd = parseInt(shipStart) + parseInt(currentShipInstance.length);\n            if(currentShipInstance.orientation === 1 && currentShipInstance.length > 1){\n                shipEnd = shipStart + ((currentShipInstance.length - 1) * 10);\n                currentGameboard.placeShip(currentShipInstance, shipStart, shipEnd);\n            } else {\n                currentGameboard.placeShip(currentShipInstance, shipStart, shipEnd);\n            }\n\n            let player = currentGridSquare.slice(0, 3);\n            let squareNum = currentGridSquare.slice(3);\n\n            placeShipOnBoard(currentShipInstance, player, squareNum);\n            \n            if(currentGameboard.ships.find((ship) => ship.name === currentShip)){\n                disableShip(e); // disables ship if placed correctly (sometimes drag/drop fails if not placed 'perfectly')\n            }\n\n            // 'wipe' the 3 below so no values remain when placing the next ship\n            currentGridSquare = null;\n            currentGameboard = null;\n            currentShip = null;\n\n        } else {\n            alert(\"position isn't empty!\");\n            return;\n        };\n    }\n\n    function disableShip(e) {\n        e.target.removeAttribute(\"draggable\"); // **\n        e.target.classList.add('hidden'); // **\n        // ** stops user from placing ships on grid repetitively\n        // ** WILL HAVE TO RE-ENABLE IF A GAME/BOARD IS RESET\n    }\n\n    function addShipResetBtn(player) {\n        let p1ResetBtn = document.querySelector('.resetBtn.one');\n        let p2ResetBtn = document.querySelector('.resetBtn.two');\n        let shipContainer;\n        let resetBtn = document.createElement('button');\n        resetBtn.classList.add(`resetBtn`, `${player}`);\n        resetBtn.textContent = \"RESET SHIPS\";\n\n        if(player === 'one'){\n            if(p1ResetBtn){\n                p1ResetBtn.classList.remove('hidden');\n                return;\n            } else {\n                shipContainer = document.querySelector('.shipContainer.p1Ships');\n                shipContainer.appendChild(resetBtn);\n                resetBtnListener(resetBtn);\n                shipContainer = null;\n            }\n        } else {\n            if(p2ResetBtn){\n                p2ResetBtn.classList.remove('hidden');\n                return;\n            } else {\n                shipContainer = document.querySelector('.shipContainer.p2Ships');\n                shipContainer.appendChild(resetBtn);\n                resetBtnListener(resetBtn);\n                shipContainer = null;\n            }\n        }\n        return;\n    }\n\n    function resetBtnListener(btn) {\n        btn.addEventListener('click', (e) => {\n            let currentBtn = () => {\n                let p1Ships = document.querySelectorAll('.p1.hidden');\n                let p2Ships = document.querySelectorAll('.p2.hidden');\n                if(e.target.classList.contains('one')){\n                    e.target.classList.add('hidden');\n                    document.querySelector('.confirmBtn.one').classList.add('hidden');\n                    p1gameboard = new _gameboardClass__WEBPACK_IMPORTED_MODULE_0__.Gameboard;\n                    gameboardOneSquares.forEach((square) => {\n                        if(square.classList.contains('occupied')){\n                            square.classList.remove('occupied');\n                        }\n                    })\n                    p1Ships.forEach((ship) => {\n                        ship.classList.remove('hidden');\n                        ship.setAttribute('draggable', 'true')\n                        ship.style.opacity = \"1\";\n                    })\n                    \n                    return `you reset p1`;\n                } else {\n                    e.target.classList.add('hidden');\n                    document.querySelector('.confirmBtn.two').classList.add('hidden');\n                    p2gameboard = new _gameboardClass__WEBPACK_IMPORTED_MODULE_0__.Gameboard;\n                    gameboardTwoSquares.forEach((square) => {\n                        if(square.classList.contains('occupied')){\n                            square.classList.remove('occupied');\n                        }\n                    })\n                    p2Ships.forEach((ship) => {\n                        ship.classList.remove('hidden');\n                        ship.setAttribute('draggable', 'true')\n                        ship.style.opacity = \"1\";\n                    })\n                    \n                    return `you reset p2`;\n                }\n            }\n            console.log(currentBtn());\n        })\n    }\n\n    function addConfirmShipPlacementBtn(player) {\n        let p1ConfirmBtn = document.querySelector('.confirmBtn.one');\n        let p2ConfirmBtn = document.querySelector('.confirmBtn.two');\n        let shipContainer;\n        let confirmBtn = document.createElement('button');\n        confirmBtn.classList.add(`confirmBtn`, `${player}`);\n        confirmBtn.textContent = \"CONFIRM SHIP PLACEMENT\";\n\n        if(player === 'one'){\n            if(p1ConfirmBtn){\n                p1ConfirmBtn.classList.remove('hidden');\n                return;\n            } else {\n                shipContainer = document.querySelector('.shipContainer.p1Ships');\n                shipContainer.appendChild(confirmBtn);\n                confirmShipsBtnListener(confirmBtn, player);\n                shipContainer = null;\n            }\n        } else {\n            if(p2ConfirmBtn){\n                p2ConfirmBtn.classList.remove('hidden');\n                return;\n            } else {\n                shipContainer = document.querySelector('.shipContainer.p2Ships');\n                shipContainer.appendChild(confirmBtn);\n                confirmShipsBtnListener(confirmBtn, player);\n                shipContainer = null;\n            }\n        }\n        return;\n    }\n\n    function confirmShipsBtnListener(btn, player) {\n        btn.addEventListener('click', () => {\n            if(player === 'one') {\n                document.querySelector('.gameboardOne').classList.add('hidden');\n                nextPlayerDialog(player);\n            } else {\n                startGameDialog();\n            }\n        });\n    }\n\n    function startGameDialog() {\n        let startGameDialog = document.querySelector('.startGameDialog');\n        let startGameBtn = document.querySelector('.startGameBtn');\n        startGameDialog.showModal();\n        startGameDialog.addEventListener('cancel', (e) => {\n            e.preventDefault();\n        });\n        startGameBtn.addEventListener('click', () => {\n            \n            document.querySelector('.gameboardOne').classList.remove('hidden'); // show p1 their own grid on their turn\n            document.querySelector('.resetBtn.one').classList.add('hidden'); // hide p1 resetShips btn\n            document.querySelector('.confirmBtn.one').classList.add('hidden'); // hide p1 confirmShips btn\n            document.querySelector('.resetBtn.two').classList.add('hidden'); // hide p2 resetShips btn\n            document.querySelector('.confirmBtn.two').classList.add('hidden'); // hide p2 confirmShips btn\n            document.querySelector('.p1TurnFinContainer').classList.remove('hidden'); // show the 'Turn Finished' btn\n            gameboardTwoSquares.forEach((square) => {\n                square.classList.add('gameboardSquareAttack');\n                square.addEventListener('click', addListenerToGridContainer);\n                if(square.classList.contains('occupied')){\n                    square.classList.add('mimic');\n                    square.classList.remove('occupied');\n                }\n            })\n            startGameDialog.close();\n        })\n        turnFinBtnListener();\n    }\n\n    function addListenerToGridContainer(e) {\n        if(e.target.classList.contains('gameboardOneSquare')){\n            playerAttackReady(e.target);\n        } else if (e.target.classList.contains('gameboardTwoSquare')){\n            playerAttackReady(e.target);\n        }\n    }\n\n    function playerAttackReady(square) {   \n        if(playerHasAttacked === 1){\n            alert (`You've already attacked!`)\n            return;\n        } else if (square.style.backgroundColor === 'red' || square.style.backgroundColor === 'blue'){\n            alert ('Position already attacked!')\n            return;\n        } else {\n            playerHasAttacked = 1; // increase so we know the attack has happened\n        }\n\n        \n    \n        let target = square.classList[1].slice(3);\n        let currentPlayerGameboard = square.classList[1].includes('one') ? p1gameboard : p2gameboard;\n        let attackResult = currentPlayerGameboard.receiveAttack(parseInt(target));\n    \n        if (attackResult === 'hit') {\n            square.style.backgroundColor = 'red';\n        } else {\n            square.style.backgroundColor = 'blue';\n        }\n    }\n\n    function turnFinBtnListener() {\n        playerHasAttacked = 0;\n        let p1TurnFinBtn = document.querySelector('.p1TurnFinBtn');\n        let p2TurnFinBtn = document.querySelector('.p2TurnFinBtn');\n        let nextPlayerDialog = document.querySelector('.nextPlayerDialog');\n\n        p1TurnFinBtn.addEventListener('click', () => {\n            if(playerHasAttacked === 0){ // checks if player has taken their turn\n                alert('turn not taken!');\n                return;\n            } else {\n                playerHasAttacked = 0;\n            }\n            nextPlayerDialog.showModal();\n            playerContinue(p1TurnFinBtn);\n        })\n\n        p2TurnFinBtn.addEventListener('click', () => {\n            if(playerHasAttacked === 0){ // checks if player has taken their turn\n                alert('turn not taken!');\n                return;\n            } else {\n                playerHasAttacked = 0;\n            }\n            nextPlayerDialog.showModal();\n            playerContinue(p2TurnFinBtn);\n        })\n    }\n\n    function nextPlayerDialog(player) {\n        //make this function close the dialog and prep the next player\n        let nextPlayerDialog = document.querySelector('.nextPlayerDialog');\n        nextPlayerDialog.showModal();\n        nextPlayerDialog.addEventListener('cancel', (e) => {\n            e.preventDefault();\n        });\n        playerContinue(player);\n    }\n\n    function playerContinue(player) {\n        let nextPlayerDialog = document.querySelector('.nextPlayerDialog');\n        let continueBtn = document.querySelector('.continueBtn');\n        let p1TurnFinBtn = document.querySelector('.p1TurnFinBtn');\n        continueBtn.addEventListener('click', () => {\n            if(player === 'one'){\n                document.querySelector('.gameboardTwo').classList.remove('hidden');\n                nextPlayerDialog.close();\n                return;\n            }\n            \n            if(player === p1TurnFinBtn) {\n                gameboardOneSquares.forEach((square) => {\n                    square.addEventListener('click', addListenerToGridContainer);\n                    square.classList.add('gameboardSquareAttack');\n                    if(square.classList.contains('occupied')){\n                        square.classList.add('mimic'); // has no style, simply a placeholder to remember which ones were occupied\n                        square.classList.remove('occupied');\n                    }\n                })\n                document.querySelector('.p1TurnFinContainer').classList.add('hidden');\n                document.querySelector('.p2TurnFinContainer').classList.remove('hidden');\n                gameboardTwoSquares.forEach((square) => {\n                    // square.addEventListener('click', addSquareClickListener(square));\n                    square.removeEventListener('click', addListenerToGridContainer);\n                    square.classList.remove('gameboardSquareAttack');\n                    if(square.classList.contains('mimic')){\n                        square.classList.add('occupied');\n                        square.classList.remove('mimic');\n                    }\n                })\n\n                nextPlayerDialog.close();\n            } else {\n                gameboardTwoSquares.forEach((square) => {\n                    square.addEventListener('click', addListenerToGridContainer);\n                    square.classList.add('gameboardSquareAttack');\n                    if(square.classList.contains('occupied')){\n                        square.classList.add('mimic'); // has no style, simply a placeholder to remember which ones were occupied\n                        square.classList.remove('occupied');\n                    }\n                })\n                document.querySelector('.p2TurnFinContainer').classList.add('hidden');\n                document.querySelector('.p1TurnFinContainer').classList.remove('hidden');\n                gameboardOneSquares.forEach((square) => {\n                    // square.addEventListener('click', addSquareClickListener(square));\n                    square.removeEventListener('click', addListenerToGridContainer);\n                    square.classList.remove('gameboardSquareAttack');\n                    if(square.classList.contains('mimic')){\n                        square.classList.add('occupied');\n                        square.classList.remove('mimic');\n                    }\n                })\n                nextPlayerDialog.close();\n            }\n        })\n    }    \n\n    let p1Ships = document.querySelectorAll('.p1'); // ships for ship listener\n        p1Ships.forEach((ship) => {\n            ship.addEventListener('dragstart', dragStart);\n            ship.addEventListener('dragend', (e) => {\n                confirmShipAndBoard(e);\n                placeShipInArr(e);\n            });\n            ship.addEventListener('contextmenu', (e) => {\n                e.preventDefault();\n                changeShipOrientation(e);\n            });\n        });\n\n    let p2Ships = document.querySelectorAll('.p2'); // ships for ship listener\n        p2Ships.forEach((ship) => {\n            ship.addEventListener('dragstart', dragStart);\n            ship.addEventListener('dragend', (e) => {\n                confirmShipAndBoard(e);\n                placeShipInArr(e);\n            });\n            ship.addEventListener('contextmenu', (e) => {\n                e.preventDefault();\n                changeShipOrientation(e);\n            });\n        });\n\n    gameboardOneSquares.forEach((square) => {\n        square.addEventListener('dragover', dragOver);\n        square.addEventListener('dragleave', dragLeave);\n        square.addEventListener('drop', getStartPosition);\n        square.addEventListener('drop', removeOver);\n    })\n\n    gameboardTwoSquares.forEach((square) => {\n        square.addEventListener('dragover', dragOver);\n        square.addEventListener('dragleave', dragLeave);\n        square.addEventListener('drop', getStartPosition);\n        square.addEventListener('drop', removeOver);\n    })\n}\n\nstartGame();\n\n//# sourceURL=webpack://Battleship/./src/boardFunctions.js?");

/***/ }),

/***/ "./src/domElemCreation.js":
/*!********************************!*\
  !*** ./src/domElemCreation.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBody: function() { return /* binding */ createBody; },\n/* harmony export */   gameOverProtocol: function() { return /* binding */ gameOverProtocol; }\n/* harmony export */ });\nconst BODY = document.querySelector('body');\n\nfunction createBody(){\n\n\n// HEADER AND START GAME / RESTART GAME BUTTONS\nconst headerDiv = document.createElement('div');\nheaderDiv.classList.add('header');\n\nconst headerH1 = document.createElement('h1');\nheaderH1.textContent = \"BATTLESHIP\";\n\nconst headerPara = document.createElement('p');\nheaderPara.textContent = \"*** Right click a ship change orientation when placing your ships\";\n\nconst newGameBtn = document.createElement('button');\nnewGameBtn.textContent = \"NEW GAME\";\nnewGameBtn.classList.add('newGameBtn');\n\nBODY.appendChild(headerDiv);\nBODY.appendChild(newGameBtn);\nheaderDiv.appendChild(headerH1);\nheaderDiv.appendChild(headerPara);\n\n\n// MAIN CONTENT CONTAINER WITH GAMEBOARDS AND GRID SQUARES\nconst mainContentContainerDiv = document.createElement('div');\nmainContentContainerDiv.classList.add('mainContentContainer');\nmainContentContainerDiv.classList.add('hidden');\n\nconst gameboardContainer = document.createElement('div');\ngameboardContainer.classList.add('gameboardContainer');\n\nconst gameboardOne = document.createElement('div');\ngameboardOne.classList.add('gameboardOne');\n\nconst gameboardTwo = document.createElement('div');\ngameboardTwo.classList.add('gameboardTwo');\ngameboardTwo.classList.add('hidden');\n\nconst gameboardOneH2 = document.createElement('h2');\ngameboardOneH2.classList.add('playerHeader');\ngameboardOneH2.textContent = \"Player One\";\n\nconst gameboardTwoH2 = document.createElement('h2');\ngameboardTwoH2.classList.add('playerHeader');\ngameboardTwoH2.textContent = \"Player Two\";\n\nconst gameboardOneGrid = document.createElement('div');\ngameboardOneGrid.classList.add('gridContainer');\ngameboardOneGrid.classList.add('p1');\n\nconst gameboardTwoGrid = document.createElement('div');\ngameboardTwoGrid.classList.add('gridContainer');\ngameboardTwoGrid.classList.add('p2');\n\n// gameboardOne grid squares\n for (let i = 0; i < 100; i++){\n    let gridSquare = document.createElement('div');\n    gridSquare.classList.add('gameboardOneSquare');\n    gridSquare.classList.add(`one${i}`)\n    gameboardOneGrid.appendChild(gridSquare)\n }\n\n// gameboardTwo grid squares\n for (let i = 0; i < 100; i++){\n    let gridSquare = document.createElement('div');\n    gridSquare.classList.add('gameboardTwoSquare');\n    gridSquare.classList.add(`two${i}`)\n    gameboardTwoGrid.appendChild(gridSquare)\n }\n\nconst p1ShipContainer = document.createElement('div');\np1ShipContainer.classList.add('shipContainer');\np1ShipContainer.classList.add('p1Ships');\n\nconst p1Carrier = document.createElement('div');\np1Carrier.classList.add('carrier');\np1Carrier.classList.add('p1');\np1Carrier.setAttribute('draggable', 'true');\n\nconst p1Destroyer = document.createElement('div');\np1Destroyer.classList.add('destroyer');\np1Destroyer.classList.add('p1');\np1Destroyer.setAttribute('draggable', 'true');\n\nconst p1Battleship1 = document.createElement('div');\np1Battleship1.classList.add('battleship1');\np1Battleship1.classList.add('p1');\np1Battleship1.setAttribute('draggable', 'true');\n\nconst p1Battleship2 = document.createElement('div');\np1Battleship2.classList.add('battleship2');\np1Battleship2.classList.add('p1');\np1Battleship2.setAttribute('draggable', 'true');\n\nconst p1DLifeRaft = document.createElement('div');\np1DLifeRaft.classList.add('lifeRaft');\np1DLifeRaft.classList.add('p1');\np1DLifeRaft.setAttribute('draggable', 'true');\n\n\nconst p2Carrier = document.createElement('div');\np2Carrier.classList.add('carrier');\np2Carrier.classList.add('p2');\np2Carrier.setAttribute('draggable', 'true');\n\nconst p2Destroyer = document.createElement('div');\np2Destroyer.classList.add('destroyer');\np2Destroyer.classList.add('p2');\np2Destroyer.setAttribute('draggable', 'true');\n\nconst p2Battleship1 = document.createElement('div');\np2Battleship1.classList.add('battleship1');\np2Battleship1.classList.add('p2');\np2Battleship1.setAttribute('draggable', 'true');\n\nconst p2Battleship2 = document.createElement('div');\np2Battleship2.classList.add('battleship2');\np2Battleship2.classList.add('p2');\np2Battleship2.setAttribute('draggable', 'true');\n\nconst p2DLifeRaft = document.createElement('div');\np2DLifeRaft.classList.add('lifeRaft');\np2DLifeRaft.classList.add('p2');\np2DLifeRaft.setAttribute('draggable', 'true');\n\nconst p2ShipContainer = document.createElement('div');\np2ShipContainer.classList.add('shipContainer');\np2ShipContainer.classList.add('p2Ships');\n\nBODY.appendChild(mainContentContainerDiv);\nmainContentContainerDiv.appendChild(gameboardContainer);\n\ngameboardContainer.appendChild(gameboardOne);\ngameboardOne.appendChild(gameboardOneH2);\ngameboardOne.appendChild(gameboardOneGrid);\ngameboardOne.appendChild(p1ShipContainer);\np1ShipContainer.appendChild(p1Carrier);\np1ShipContainer.appendChild(p1Destroyer);\np1ShipContainer.appendChild(p1Battleship1);\np1ShipContainer.appendChild(p1Battleship2);\np1ShipContainer.appendChild(p1DLifeRaft);\n\ngameboardContainer.appendChild(gameboardTwo);\ngameboardTwo.appendChild(gameboardTwoH2);\ngameboardTwo.appendChild(gameboardTwoGrid);\ngameboardTwo.appendChild(p2ShipContainer);\np2ShipContainer.appendChild(p2Carrier);\np2ShipContainer.appendChild(p2Destroyer);\np2ShipContainer.appendChild(p2Battleship1);\np2ShipContainer.appendChild(p2Battleship2);\np2ShipContainer.appendChild(p2DLifeRaft);\n\n\n// Dialog Box for player switching\n\nconst nextPlayerDialog = document.createElement('dialog');\nnextPlayerDialog.classList.add('nextPlayerDialog');\nnextPlayerDialog.textContent = 'PASS TO NEXT PLAYER. NEXT PLAYER HIT \"CONTINUE\" WHEN READY';\n\nconst nextDialogContainer = document.createElement('div');\nnextDialogContainer.classList.add('nextDialogContainer')\n\nconst dialogContinueBtn = document.createElement('button');\ndialogContinueBtn.classList.add('continueBtn');\ndialogContinueBtn.textContent = \"CONTINUE\";\n\nconst startGameDialog = document.createElement('dialog');\nstartGameDialog.classList.add('startGameDialog');\nstartGameDialog.textContent = \"IT'S TIME... PASS BACK TO PLAYER ONE AND GET READY TO FIRE ZE MISSILEZ!\"\n\nconst startDialogContainer = document.createElement('div');\nstartDialogContainer.classList.add('startDialogContainer')\n\nconst startGameBtn = document.createElement('button');\nstartGameBtn.classList.add('startGameBtn')\nstartGameBtn.textContent = \"START GAME\";\n\n\nBODY.appendChild(nextPlayerDialog);\nnextPlayerDialog.appendChild(nextDialogContainer);\nnextDialogContainer.appendChild(dialogContinueBtn);\n\nBODY.appendChild(startGameDialog);\nstartGameDialog.appendChild(startDialogContainer);\nstartDialogContainer.appendChild(startGameBtn)\n\n for(let i = 1; i < 3; i++){\n    let turnFinBtnContainer = document.createElement('div');\n    let turnFinBtn = document.createElement('button');\n    turnFinBtnContainer.classList.add(`p${i}TurnFinContainer`);\n    turnFinBtnContainer.classList.add('hidden');\n    turnFinBtn.classList.add(`p${i}TurnFinBtn`);\n    turnFinBtn.textContent = \"TURN FINISHED\";\n    BODY.appendChild(turnFinBtnContainer);\n    turnFinBtnContainer.appendChild(turnFinBtn);\n }\n\nconst p1TurnFinContainer = document.querySelector('.p1TurnFinContainer');\nconst p2TurnFinContainer = document.querySelector('.p2TurnFinContainer');\n\np1ShipContainer.appendChild(p1TurnFinContainer);\np2ShipContainer.appendChild(p2TurnFinContainer);\n\n}\n\n\nfunction gameOverProtocol(){\n    const gameOverDialog = document.createElement('dialog');\n    gameOverDialog.classList.add('gameOverDialog');\n    gameOverDialog.textContent = \"GAME OVER\";\n\n    const restartGameBtn = document.createElement('button');\n    restartGameBtn.classList.add('restartGameBtn');\n    restartGameBtn.textContent = `LET'S GO AGAIN!`\n    \n    BODY.appendChild(gameOverDialog);\n    gameOverDialog.appendChild(restartGameBtn);\n\n    gameOverDialog.showModal();\n\n    restartGameBtn.addEventListener('click', () => {\n        gameOverDialog.close();\n        location.reload();\n    });\n}\n\n//# sourceURL=webpack://Battleship/./src/domElemCreation.js?");

/***/ }),

/***/ "./src/gameboardClass.js":
/*!*******************************!*\
  !*** ./src/gameboardClass.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Gameboard: function() { return /* binding */ Gameboard; }\n/* harmony export */ });\n/* harmony import */ var _domElemCreation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domElemCreation */ \"./src/domElemCreation.js\");\n\n\nclass Gameboard {\n    constructor(){\n        this.board = new Array(100).fill(null);\n        this.shipPositions = new Map();\n        //{ 'ship.name' => [ship coordinates] } layout for each ship added via placeShip()\n        this.ships = [];\n    }\n\n    placeShip(ship, shipStart, shipEnd){\n        this.ships.push(ship);\n        if(shipStart == null){\n            return;\n        }\n        for(let i = 0; i < ship.length; i++){\n            this.board.splice(shipStart, 1, ship);\n\n            if(this.shipPositions.has(ship.name)){\n                this.shipPositions.get(ship.name).push(shipStart);\n            } else {\n                this.shipPositions.set(ship.name, [shipStart]); // 'if the ship doesn't exist already, .set the ship.name && an array containing the ship coordinates to our shipPositions Map'\n            }\n\n            if(shipEnd > shipStart + 9){ // \"is ship vertical or horizontal?\"\n                shipStart += 10; // if vertical, we know the next spot in the array/grid is 10 places away\n            } else {\n                shipStart++; // if horizontal, it's just the next space over\n            }\n        }\n    };\n\n    checkGameStatus(currentShip){\n        if(this.ships.length === 0){\n            alert ('GAME OVER');\n            (0,_domElemCreation__WEBPACK_IMPORTED_MODULE_0__.gameOverProtocol)();\n            return;\n        } else {\n            alert (`${currentShip.name} has been sunk!`);\n            return;\n        }\n    }\n\n    checkShipStatus(currentShip){\n        if(currentShip.sunk === true){\n            this.ships.forEach(ship => {\n                let shipIndex = this.ships.indexOf(currentShip)\n                if(ship.name == currentShip.name){\n                    this.ships.splice(shipIndex, 1);\n                    this.checkGameStatus(currentShip);\n                }\n            })\n        } else {\n            return;\n        }\n    }\n\n    receiveAttack(location){\n        if(this.board[location] !== null){\n            let shipAttacked = this.checkShipLocation(location);\n            shipAttacked.hit();\n            this.checkShipStatus(shipAttacked);\n            return `hit`;\n        } else {\n            this.board[location] = 'miss';\n            return `lol you missed`;\n        }\n    }\n\n    checkShipLocation(location){\n        for(let [key, value] of this.shipPositions.entries()) {\n            if (value.includes(location)){\n                let shipAtLocation = this.ships.find((ship) => ship.name === key);\n                return shipAtLocation;\n            }\n        }\n    }\n}\n\n        //[0] [1] [2] [3] [4] [5] [6] [7] [8] [9]\n        //[10][11][12][13][14][15][16][17][18][19]\n        //[20][21][22][23][24][25][26][27][28][29]\n        //[30][31][32][33][34][35][36][37][38][39]\n        //[40][41][42][43][44][45][46][47][48][49]\n        //[50][51][52][53][54][55][56][57][58][59]\n        //[60][61][62][63][64][65][66][67][68][69]\n        //[70][71][72][73][74][75][76][77][78][79]\n        //[80][81][82][83][84][85][86][87][88][89]\n        //[90][91][92][93][94][95][96][97][98][99]\n\n//# sourceURL=webpack://Battleship/./src/gameboardClass.js?");

/***/ }),

/***/ "./src/shipClass.js":
/*!**************************!*\
  !*** ./src/shipClass.js ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ship: function() { return /* binding */ Ship; }\n/* harmony export */ });\nclass Ship {\n    constructor(name, length, hits = 0, sunk = false){\n        this.name = name;\n        this.length = length;\n        this.orientation = 0;\n        this.hits = hits;\n        this.sunk = sunk;\n    }\n\n    hit(){\n        this.hits++;\n        if(this.hits !== this.length){\n            return 'hit';\n        } else {\n            this.sunk = true;\n            return 'sunk';\n        }\n    }\n}\n\n//# sourceURL=webpack://Battleship/./src/shipClass.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	!function() {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/boardFunctions.js");
/******/ 	
/******/ })()
;